name: Run Checks
on: [pull_request]

permissions:
  checks: write
  contents: write

jobs:
  run-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ github.token }}
      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18
      - name: Install dependencies
        run: npm ci 
      - name: ESLint
        uses: wearerequired/lint-action@v2
        continue-on-error: true
        with:
          eslint: true
      - name: Prettier
        uses: wearerequired/lint-action@v2
        continue-on-error: true
        with:
          auto_fix: true
          prettier: true
      - name: Install closure compiler
        run: npm i -g google-closure-compiler
      - name: Run closure compiler
        run: |
          COMPILE="$(google-closure-compiler --js ./src/pwamp.js --checks_only 2>&1)"
          EXITCODE=$?
          # GitHub Actions does not support multi-line strings as outputs, so line breaks must be encoded
          # they will automatically be substituted back in during GitHub Actions interpolation later, before script execution
          # first, encode % so that instances of it aren't mistaken for encodings later
          COMPILE="${COMPILE//'%'/%25}"
          COMPILE="${COMPILE//$'\n'/%0A}"
          COMPILE="${COMPILE//$'\r'/%0D}"
          COMPILE=$(echo "$COMPILE" | sed -e 's/"//g')
          # escape any backticks, which delimit template literals in Node.js (raw strings)
          # and escape '$' which will also trip up the Node.js interpolation in the github-script step
          COMPILE="${COMPILE//\`/\\\`}"
          COMPILE="${COMPILE//\$/\\\$}"
          echo $COMPILE
          echo "::set-output name=compile::$COMPILE"
          echo "::set-output name=exitcode::$EXITCODE"
        id: pwamp-closure-compiler
      # - id: files
      #   uses: jitterbit/get-changed-files@v1
      #   with:
      #     # Format of the steps output context.
      #     # Can be 'space-delimited', 'csv', or 'json'.
      #     #
      #     # Default: 'space-delimited'
      #     format: 'json'
      # - name: Format Msg
      #   uses: ./.github/actions/google-chat-notification-on-push/
      #   with:
      #     event: "${{toJSON(github.event)}}"
      #     steps: "${{toJSON(steps)}}"
      #   id: modded
      - name: Dev Output
        run: |
          echo "${{steps.pwamp-closure-compiler.outputs.compile}}"
          echo "${{steps.pwamp-closure-compiler.outputs.exitcode}}"
      # - name: Send Google Chat Notification
      #   run: |
      #     curl --location --request POST 'https://chat.googleapis.com/v1/spaces/AAAA72wbnqo/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=1iD1-r6ibCBa3VbHdTzYLMp-exJU70e_J0__XvWXQSA%3D' \
      #     --header 'Content-Type: application/json' \
      #     -d ${{steps.modded.outputs.chat-msg}}
